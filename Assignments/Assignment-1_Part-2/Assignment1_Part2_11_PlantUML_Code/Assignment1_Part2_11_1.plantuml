@startuml Assignment1_Part2_11_1

skinparam class {
 BackgroundColor #FFFFFF
 BorderColor #000000
 ArrowColor #000000
 FontColor #000000
 BackgroundColor<<SmartVehicleBookingSystem>> #ADD1B2
}

skinparam classFontColor black
skinparam classFontSize 20
skinparam classFontName sans-serif

title \n<size:24><b>Team 11 \n<size:18> \n\n\n<size:24><b><u>Smart Vehicle Booking System - Class Diagram</u></b></size>\n

abstract class User #A9DCDF {
 - userId: String
 - name: String
 - email: String
 - password: String
 - wallet: Wallet
 + createAccount(): void
 + uploadId(): void
 + addMoneyToWallet(amount: double): void
 + viewTripHistory(): void
}

class Student extends User {
 - studentId: String
 + getStudentId(): String
 + getUserDetails(): Map<String, Object>
}

class Staff extends User {
 - staffId: String
 + getStaffId(): String
 + getUserDetails(): Map<String, Object>
}

class Teacher extends User {
 - teacherId: String
 + getTeacherId(): String
 + getUserDetails(): Map<String, Object>
}

class Wallet {
 - balance: double
 + addMoney(amount: double): void
 + deductMoney(amount: double): void
}

class Vehicle {
 - vehicleId: String
 - vehicleType: VehicleType
 + getVehicleId(): String
 + getVehicleType(): VehicleType
}

note top : Within the Vehicle class, \nthere is an instance variable named VehicleType, \nand it should be of the type VehicleType. \nThe actual implementation of the VehicleType class \nwould contain details about the properties and \nmethods associated with representing a vehicle type.

class ParkingLot {
 - parkingLotId: String
 - capacity: int
 - availability: int
 - location: String
 - maintenanceStatus: String
 - securityFeatures: String
 + getParkingLotId(): String
 + getCapacity(): int
 + getAvailability(): int
 + getLocation(): String
 + getMaintenanceStatus(): String
 + getSecurityFeatures(): String
}

class TripManagement {
 - tripId: String
 - vehicle: Vehicle
 - user: User
 - startTime: Date
 - endTime: Date
 - endTimeWithinLimit: boolean
 - distance: double
 - baseRate: double 
 - ratePer100Meters: double
 - finePerDay: double
 - amountDue: double
 + startTrip(): void
 + endTrip(): void
 + calculateDistance(): void
 + calculateAmountDue(): void
 + applyFine(): void

}
note left of TripManagement::endTimeWithinLimit
  To check if the bike is returned within 8 hours
end note

note left of TripManagement::baseRate
  Base rate for the first x kilometers
end note

note left of TripManagement::ratePer100Meters
  Rate for every 100 meters beyond the base rate
end note

note left of TripManagement::finePerDay
  Fine for not returning the bike within 8 hours
end note

note left of TripManagement::applyFine
  Method to apply the fine if the bike is not returned within 8 hours
end note

class PaymentManagement {
 - paymentId: String
 - user: User
 - amount: double
 - paymentMethod: PaymentMethod
 + makePayment(): void
}

note top : Within the PaymentManagement class, \nthere is an instance variable named paymentMethod, \nand it should be of the type PaymentMethod. \nThe actual implementation of the PaymentMethod class \nwould contain details about the properties and \nmethods associated with representing a payment method.

class Feedback {
 - feedbackId: String
 - user: User
 - rating: int
 - comment: String
 + provideFeedback(): void
}

class SmartVehicleBookingSystem #ADD1B2{
 - users: List<User>
 - vehicles: List<Vehicle>
 - parkingLots: List<ParkingLot>
 - trips: List<TripManagement>
 - payments: List<PaymentManagement>
 - feedbacks: List<Feedback>
 + registerUser(user: User): void
 + addVehicle(vehicle: Vehicle): void
 + addParkingLot(parkingLot: ParkingLot): void
 + createTrip(user: User, vehicle: Vehicle): void
 + processPayment(user: User, amount: double, paymentMethod: PaymentMethod): void
 + addFeedback(feedback: Feedback): void
}

User "1" *--o "1" Wallet
User "1" --o "0..*" TripManagement
User "1" --o "0..*" PaymentManagement
User "1" *--o "1" Feedback
User "1" --o "0..*" Vehicle

Vehicle "1" --o "0..1" ParkingLot
TripManagement "1" --o "1" Vehicle
TripManagement "1" --o "1" User
PaymentManagement "1" --o "1" User

SmartVehicleBookingSystem "1" --o "0..*" User
SmartVehicleBookingSystem "1" --o "0..*" Vehicle
SmartVehicleBookingSystem "1" --o "0..*" ParkingLot
SmartVehicleBookingSystem "1" --o "0..*" TripManagement
SmartVehicleBookingSystem "1" --o "0..*" PaymentManagement
SmartVehicleBookingSystem "1" --o "0..*" Feedback

'==========='




footer \n<size:14><b><u>Designed By Assignment1_Part2_11</u></b></size>\n
@enduml
